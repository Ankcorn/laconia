service: laconia-acceptance

plugins:
 - serverless-s3-remover
 - serverless-s3-sync

provider:
  name: aws
  runtime: ${env:NODE_RUNTIME}
  stage: ${env:NODE_VERSION}
  region: ${env:AWS_REGION}
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - s3:*
      Resource: "*"
    - Effect: "Allow"
      Action:
        - "lambda:InvokeFunction"
        - "lambda:InvokeAsync"
        - "dynamodb:Scan"
        - "dynamodb:Query"
        - "dynamodb:PutItem"
      Resource: "*"
  environment:
    TRACKER_BUCKET_NAME: ${self:custom.trackerBucketName}
    TEST_BUCKET_NAME: ${self:custom.testBucketName}

custom:
  fullName: ${self:service}-${self:provider.stage}
  trackerBucketName: ${self:custom.fullName}-tracker
  restaurantBucketName: ${self:custom.fullName}-restaurant
  testBucketName: ${self:custom.fullName}-bucket
  testDynamoDbBatchTableName: ${self:custom.fullName}-batch
  orderDynamoDbBatchTableName: ${self:custom.fullName}-Order
  remover:
     buckets:
       - ${self:custom.testBucketName}
       - ${self:custom.trackerBucketName}
  s3Sync:
    - bucketName: ${self:custom.restaurantBucketName}
      localDir: src/resources
  
functions:
  handler-basic:
    handler: src/handler/basic.handler
  handler-recursive:
    handler: src/handler/recursive.handler
  batch-s3:
    handler: src/batch/s3.handler
    timeout: 6
  batch-dynamodb:
    handler: src/batch/dynamodb.handler
    timeout: 6
    environment:
      TABLE_NAME: ${self:custom.testDynamoDbBatchTableName}
  place-order:
    handler: src/place-order.handler
    events:
      - http:
          path: order
          method: post
    environment:
      ORDER_TABLE_NAME: ${self:custom.orderDynamoDbBatchTableName}
  process-card-payments:
    timeout: 6 # Force recursion
    handler: src/process-card-payments.handler
    environment:
      CAPTURE_CARD_PAYMENT_FUNCTION_NAME: ${self:custom.fullName}-capture-card-payment
      ORDER_TABLE_NAME: ${self:custom.orderDynamoDbBatchTableName}
  capture-card-payment:
    handler: src/capture-card-payment.handler
  calculate-total-order:
    timeout: 6 # Force recursion
    handler: src/calculate-total-order.handler
    environment:
      RESTAURANT_BUCKET_NAME: ${self:custom.restaurantBucketName}
      ORDER_TABLE_NAME: ${self:custom.orderDynamoDbBatchTableName}

resources:
  Resources:
    S3Tracker:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.trackerBucketName}
    RestaurantBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.restaurantBucketName}
    TestBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.testBucketName}
    TestDynamoDbBatchTable:
      Type: "AWS::DynamoDB::Table"
      Properties:
        AttributeDefinitions: 
          - AttributeName: "ArtistId"
            AttributeType: "S"
        KeySchema: 
          - AttributeName: "ArtistId"
            KeyType: "HASH"
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.testDynamoDbBatchTableName}
    OrderTable:
      Type: "AWS::DynamoDB::Table"
      Properties:
        AttributeDefinitions: 
          - AttributeName: "OrderId"
            AttributeType: "S"
        KeySchema: 
          - AttributeName: "OrderId"
            KeyType: "HASH"
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.orderDynamoDbBatchTableName}
